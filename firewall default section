config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'









config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'


Drop invalid packets (e.g. not matching any active connection).




config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'



Enable SYN flood protection.





config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'
	option syn_flood '1' 


Enable SYN flood protection (obsoleted by synflood_protect setting).













config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'
	option syn_flood '1'
	option synflood_rate '25/s'

Set rate limit (packets/second) for SYN packets above which the traffic is considered a flood.







///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'
	option syn_flood '1'
	option synflood_rate '25/s'
	option synflood_burst '50'


Set burst limit for SYN packets above which the traffic is considered a flood if it exceeds the allowed rate.







config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'
	option syn_flood '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'




0 Disable, 1 Enable, 2 Enable when requested for ingress (but disable for egress) Explicit Congestion Notification. Affects only traffic originating from the router itself. Implemented upstream in Linux Kernel. See kernel docs.



Control use of Explicit Congestion Notification (ECN) by TCP. ECN is used only when both ends of the TCP connection indicate support for it. This feature is useful in avoiding losses due to congestion by allowing supporting routers to signal congestion before having to drop packets.

Possible values are:

0
Disable ECN. Neither initiate nor accept ECN.
1
Enable ECN when requested by incoming connections and also request ECN on outgoing connection attempts.
2
Enable ECN when requested by incoming connections but do not request ECN on outgoing connections.
Default: 2


Source: https://docs.kernel.org/networking/ip-sysctl.html




config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'
	option syn_flood '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'



Enable the use of SYN cookies.

SYN cookie is a technique used to resist SYN flood attacks.


SYN cookies allows a server to avoid dropping connections when the SYN queue fills up. Instead of storing additional connections, a SYN queue entry is encoded into the sequence number sent in the SYN+ACK response. If the server then receives a subsequent ACK response from the client with the incremented sequence number, the server is able to reconstruct the SYN queue entry using information encoded in the TCP sequence number and proceed as usual with the connection.

To initiate a TCP connection, the client sends a TCP SYN packet to the server. The server responds with a TCP SYN+ACK packet, which includes a sequence number used by TCP to reassemble the data stream. According to the TCP specification, the initial sequence number sent by an endpoint can be any value chosen by that endpoint. Since this sequence number is chosen by the sender, returned by the recipient, and has no predefined internal structure, it can be overloaded to carry additional data. The following outlines one possible implementation, though there is no public standard, so the order, length, and semantics of the fields may vary between SYN cookie implementations.



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'
	option syn_flood '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	






Enable window scaling as defined in RFC1323

The TCP window scale option is an option to increase the receive window size allowed in Transmission Control Protocol above its former maximum value of 65,535 bytes.




Enable TCP window scaling: The tcp receive window (RWin) size is the amount of received data (in bytes) that can be buffered during a connection. The sending host can send only that amount of data before it must wait for an acknowledgment and window update from the receiving host. For more efficient use of high bandwidth networks, a larger TCP window size may be used. However, the TCP window size field controls the flow of data and is limited to 2 bytes, or a window size of 65535 bytes. Since the size field cannot be expanded, a scaling factor is used. TCP window scaling is a kernel option of the TCP/IP stack and can be used to increase the maximum window size from 65535 bytes to 1 Gigabyte. Window scaling is enabled by default. However, since some network devices such as routers, load balancers, gateways, and so on still do not fully support window scaling, depending on your environment it might be necessary to turn it off.


Source: https://docs.sophos.com/nsg/sophos-utm/utm/9.708/help/en-us/Content/utm/utmAdminGuide/NetProtFirewallAdvanced.htm




The throughput of a TCP communication is limited by two windows: the congestion window and the receive window. The congestion window tries not to exceed the capacity of the network (congestion control); the receive window tries not to exceed the capacity of the receiver to process data (flow control). The receiver may be overwhelmed by data if for example it is very busy (such as a Web server). Each TCP segment contains the current value of the receive window. If, for example, a sender receives an ACK which acknowledges byte 4000 and specifies a receive window of 10000 (bytes), the sender will not send packets after byte 14000, even if the congestion window allows it.





config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'
	option syn_flood '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'



Accepts redirects. Implemented upstream in Linux Kernel. 

BOOLEAN:

Accept ICMP redirect messages. accept_redirects for the interface will be enabled if:

both conf/{all,interface}/accept_redirects are TRUE in the case forwarding for the interface is enabled
or

at least one of conf/{all,interface}/accept_redirects is TRUE in the case forwarding for the interface is disabled
accept_redirects for the interface will be disabled otherwise

default:

TRUE (host)
FALSE (router)




Accept Redirects.

Functional default:

enabled if local forwarding is disabled.
disabled if local forwarding is enabled.






config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'





Disable IPv6 firewall rules. 


BOOLEAN:

Disable IPv6 operation. If accept_dad is set to 2, this value will be dynamically set to TRUE if DAD fails for the link-local address.

Default: FALSE (enable IPv6 operation)

When this value is changed from 1 to 0 (IPv6 is being enabled), it will dynamically create a link-local address on the given interface and start Duplicate Address Detection, if necessary.

When this value is changed from 0 to 1 (IPv6 is being disabled), it will dynamically delete all addresses and routes on the given interface. From now on it will not possible to add addresses/routes to the selected interface.








config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'




Implemented upstream in Linux Kernel.

BOOLEAN:

Accept packets with SRR option. conf/all/accept_source_route must also be set to TRUE to accept packets with SRR option on the interface


INTEGER:

Accept source routing (routing extension header).

>= 0: Accept only routing header type 2.
< 0: Do not accept routing header.
Default: 0




config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '1'
	



Enable generation of custom rule chain hooks for user generated rules. User rules would be typically stored in firewall.user but some packages e.g. BCP38 also make use of these hooks.






config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '1'
	option flow_offloading '0'
	


Enable software flow offloading for connections. (decrease cpu load / increase routing throughput)










config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '1'
	option flow_offloading '0'
	option flow_offloading_hw '0'
	
	

Enable hardware flow offloading for connections. (depends on flow_offloading and hw capability)







config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '1'
	option flow_offloading '0'
	option flow_offloading_hw '0'
	option tcp_reject_code '0'




Defined in firewall3/options.h. Seems to determine method of packet rejection; (tcp reset, or drop, vs ICMP Destination Unreachable, or closed)











config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '1'
	option flow_offloading '0'
	option flow_offloading_hw '0'
	option tcp_reject_code '0'
	option any_reject_code '1'
		




Defined in firewall3/options.h. Seems to determine method of packet rejection; (tcp reset, or drop, vs ICMP Destination Unreachable, or closed)




config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '1'
	option flow_offloading '0'
	option flow_offloading_hw '0'
	option tcp_reject_code '0'
	option any_reject_code '1'
	option auto_helper '1'



Enable Conntrack helpers



So-called connection tracking helpers enable protocols that use multiple network connections to work with firewall or NAT rules. All connections handled by the firewall are tracked by the conntrack kernel module, a process better known as connection tracking. Some protocols such as ftp and irc require several ports to be opened, and hence require special connection tracking helpers supporting them to operate correctly. These helpers are special kernel modules that help identify additional connections by marking them as being related to the initial connection, usually by reading the related addresses out of the data stream.


Source: https://docs.sophos.com/nsg/sophos-utm/utm/9.708/help/en-us/Content/utm/utmAdminGuide/NetProtFirewallAdvanced.htm





config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '0'
	option flow_offloading '0'
	option flow_offloading_hw '0'
	option tcp_reject_code '0'
	option any_reject_code '1'
	option auto_helper '1'
	option auto_includes '1'





(fw4 only, 22.03 and later) Enable automatic nftables includes under /usr/share/nftables.d/






config defaults
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option syn_flood '1'
	option synflood_protect '1'
	option synflood_rate '25/s'
	option synflood_burst '50'
	option tcp_ecn '1'
	option tcp_syncookies '1'
	option tcp_window_scaling '1'
	option accept_redirects '0'
	option disable_ipv6 '1'
	option accept_source_route '0'
	option custom_chains '0'
	option flow_offloading '0'
	option flow_offloading_hw '0'
	option tcp_reject_code '0'
	option any_reject_code '1'
	option auto_helper '1'
	option auto_includes '1'






























