cat /proc/net/ip_tables_targets



cat /proc/net/ip_tables_names



cat /proc/net/ip6_tables_names






iptables -t filter -L -v -n
iptables -t nat -L -v -n
iptables -t mangle -L -v -n
iptables -t raw -L -v -n





ip6tables -t filter -L -v -n
ip6tables -t nat -L -v -n
ip6tables -t mangle -L -v -n
ip6tables -t raw -L -v -n









iptables -L INPUT -n -v --line-numbers

iptables -t raw -L PREROUTING -n --line-numbers





iptables -t raw -D PREROUTING <line-number>

iptables -D INPUT <line-number>





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



iptables -t raw -L PREROUTING -n -v --line-numbers












iptables -t raw -A PREROUTING -p tcp --dport 1:21 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 1:21 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 23:52 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 23:52 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 54:66 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 54:66 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 69:79 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 69:79 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 81:442 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 81:442 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 444:499 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 444:499 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 501:1079 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 501:1079 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 1081:1193 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 1081:1193 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 1195:4499 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 1195:4499 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 4501:7546 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 4501:7546 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 7548:10000 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 7548:10000 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 10001:30000 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 10001:30000 -j DROP

iptables -t raw -A PREROUTING -p tcp --dport 30001:40000 -j DROP
iptables -t raw -A PREROUTING -p udp --dport 30001:40000 -j DROP














iptables -t raw -D PREROUTING -p tcp --dport 1:21 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 1:21 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 23:52 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 23:52 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 54:66 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 54:66 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 69:79 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 69:79 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 81:442 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 81:442 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 444:499 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 444:499 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 501:1079 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 501:1079 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 1081:1193 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 1081:1193 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 1195:4499 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 1195:4499 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 4501:7546 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 4501:7546 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 7548:10000 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 7548:10000 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 10001:30000 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 10001:30000 -j DROP

iptables -t raw -D PREROUTING -p tcp --dport 30001:40000 -j DROP
iptables -t raw -D PREROUTING -p udp --dport 30001:40000 -j DROP
















/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





iptables -L INPUT -n -v --line-numbers









iptables -A INPUT -p tcp --dport 1:21 -j DROP
iptables -A INPUT -p udp --dport 1:21 -j DROP

iptables -A INPUT -p tcp --dport 23:52 -j DROP
iptables -A INPUT -p udp --dport 23:52 -j DROP

iptables -A INPUT -p tcp --dport 54:66 -j DROP
iptables -A INPUT -p udp --dport 54:66 -j DROP

iptables -A INPUT -p tcp --dport 69:79 -j DROP
iptables -A INPUT -p udp --dport 69:79 -j DROP

iptables -A INPUT -p tcp --dport 81:442 -j DROP
iptables -A INPUT -p udp --dport 81:442 -j DROP

iptables -A INPUT -p tcp --dport 444:499 -j DROP
iptables -A INPUT -p udp --dport 444:499 -j DROP

iptables -A INPUT -p tcp --dport 501:1079 -j DROP
iptables -A INPUT -p udp --dport 501:1079 -j DROP

iptables -A INPUT -p tcp --dport 1081:1193 -j DROP
iptables -A INPUT -p udp --dport 1081:1193 -j DROP

iptables -A INPUT -p tcp --dport 1195:4499 -j DROP
iptables -A INPUT -p udp --dport 1195:4499 -j DROP

iptables -A INPUT -p tcp --dport 4501:7546 -j DROP
iptables -A INPUT -p udp --dport 4501:7546 -j DROP

iptables -A INPUT -p tcp --dport 7548:10000 -j DROP
iptables -A INPUT -p udp --dport 7548:10000 -j DROP

iptables -A INPUT -p tcp --dport 10001:30000 -j DROP
iptables -A INPUT -p udp --dport 10001:30000 -j DROP

iptables -A INPUT -p tcp --dport 30001:40000 -j DROP
iptables -A INPUT -p udp --dport 30001:40000 -j DROP






















iptables -D INPUT -p tcp --dport 30001:40000 -j DROP
iptables -D INPUT -p udp --dport 30001:40000 -j DROP

iptables -D INPUT -p tcp --dport 10001:30000 -j DROP
iptables -D INPUT -p udp --dport 10001:30000 -j DROP

iptables -D INPUT -p tcp --dport 7548:10000 -j DROP
iptables -D INPUT -p udp --dport 7548:10000 -j DROP

iptables -D INPUT -p tcp --dport 4501:7546 -j DROP
iptables -D INPUT -p udp --dport 4501:7546 -j DROP

iptables -D INPUT -p tcp --dport 1195:4499 -j DROP
iptables -D INPUT -p udp --dport 1195:4499 -j DROP

iptables -D INPUT -p tcp --dport 1081:1193 -j DROP
iptables -D INPUT -p udp --dport 1081:1193 -j DROP

iptables -D INPUT -p tcp --dport 501:1079 -j DROP
iptables -D INPUT -p udp --dport 501:1079 -j DROP

iptables -D INPUT -p tcp --dport 444:499 -j DROP
iptables -D INPUT -p udp --dport 444:499 -j DROP

iptables -D INPUT -p tcp --dport 81:442 -j DROP
iptables -D INPUT -p udp --dport 81:442 -j DROP

iptables -D INPUT -p tcp --dport 69:79 -j DROP
iptables -D INPUT -p udp --dport 69:79 -j DROP

iptables -D INPUT -p tcp --dport 54:66 -j DROP
iptables -D INPUT -p udp --dport 54:66 -j DROP

iptables -D INPUT -p tcp --dport 23:52 -j DROP
iptables -D INPUT -p udp --dport 23:52 -j DROP

iptables -D INPUT -p tcp --dport 1:21 -j DROP
iptables -D INPUT -p udp --dport 1:21 -j DROP





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

https://docs.kernel.org/networking/ip-sysctl.html




rp_filter - INTEGER
0 - No source validation.
1 - Strict mode as defined in RFC3704 Strict Reverse Path Each incoming packet is tested against the FIB and if the interface is not the best reverse path the packet check will fail. By default failed packets are discarded.
2 - Loose mode as defined in RFC3704 Loose Reverse Path Each incoming packet’s source address is also tested against the FIB and if the source address is not reachable via any interface the packet check will fail.

Current recommended practice in RFC3704 is to enable strict mode to prevent IP spoofing from DDos attacks. If using asymmetric routing or other complicated routing, then loose mode is recommended.

The max value from conf/{all,interface}/rp_filter is used when doing source validation on the {interface}.

Default value is 0. Note that some distributions enable it in startup scripts.




rp_filter stands for Reverse Path Filtering, a Linux kernel security feature that helps prevent IP spoofing.
It checks whether the source IP address of an incoming packet is reachable via the same interface it came in on.

It's a defense against spoofed packets — attackers trying to send packets that pretend to come from a trusted source, usually to bypass security checks or perform attacks (like DDoS, MITM, etc.).








ls /proc/sys/net/ipv4/conf/




Each network interface has its own rp_filter setting. There are also global settings.

Paths:
/proc/sys/net/ipv4/conf/all/rp_filter – applies a global setting
/proc/sys/net/ipv4/conf/default/rp_filter – default for new interfaces
/proc/sys/net/ipv4/conf/<interface>/rp_filter – per-interface setting






Value	Behavior
0	No source validation (disabled)
1	Strict mode (recommended for security)
2	Loose mode (useful in asymmetric routing)


Strict mode (1) drops packets if the return path doesn't match the incoming interface.
Loose mode (2) checks if the source IP is reachable via any interface, not necessarily the one it came in on.






temporarily (until reboot):

echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter
for iface in /proc/sys/net/ipv4/conf/*/rp_filter; do
    echo 1 > "$iface"
done






sudo nano /etc/sysctl.d/99-vpn-rpfilter.conf


# VPN interface: use loose mode (to avoid breaking VPN)
net.ipv4.conf.wgclient1.rp_filter = 2

# Everything else: strict mode for anti-spoofing
net.ipv4.conf.eth0.rp_filter = 1
net.ipv4.conf.eth1.rp_filter = 1
net.ipv4.conf.br-lan.rp_filter = 1
net.ipv4.conf.lo.rp_filter = 1
net.ipv4.conf.apcli0.rp_filter = 1
net.ipv4.conf.apclix0.rp_filter = 1
net.ipv4.conf.ra0.rp_filter = 1
net.ipv4.conf.ra1.rp_filter = 1
net.ipv4.conf.rax0.rp_filter = 1
net.ipv4.conf.rax1.rp_filter = 1

# Optional: also set all/default
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1


sysctl --system








sudo tee -a /etc/sysctl.conf > /dev/null << EOF

# Reverse Path Filtering Configuration

# VPN interface: use loose mode to avoid breaking VPN
net.ipv4.conf.wgclient1.rp_filter = 2

# All other interfaces: use strict mode for anti-spoofing
net.ipv4.conf.eth0.rp_filter = 1
net.ipv4.conf.eth1.rp_filter = 1
net.ipv4.conf.br-lan.rp_filter = 1
net.ipv4.conf.lo.rp_filter = 1
net.ipv4.conf.apcli0.rp_filter = 1
net.ipv4.conf.apclix0.rp_filter = 1
net.ipv4.conf.ra0.rp_filter = 1
net.ipv4.conf.ra1.rp_filter = 1
net.ipv4.conf.rax0.rp_filter = 1
net.ipv4.conf.rax1.rp_filter = 1

# Also set 'all' and 'default' to strict
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

EOF




sudo sysctl --system




# VPN interface: use loose mode (to avoid breaking VPN)
echo 2 > /proc/sys/net/ipv4/conf/wgclient1/rp_filter

# Everything else: strict mode for anti-spoofing
echo 1 > /proc/sys/net/ipv4/conf/eth0/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/eth1/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/br-lan/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/lo/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/apcli0/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/apclix0/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/ra0/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/ra1/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/rax0/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/rax1/rp_filter

# Optional: also set all/default
echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter













Normally, in a simple network, traffic between two points flows the same way back and forth:

Packet goes out from your device through Interface A → to destination.
Reply comes back through the same Interface A.
This is called symmetric routing — the path to the destination and back is the same.

Asymmetric routing means:
Packets leave via one interface (say, Interface A).
But the return packets come back via a different interface (say, Interface B).

Example scenario:
You have two WAN connections (dual WAN):

Outbound packets to the internet leave via eth0 (WAN1).
But the reply packets return via eth1 (WAN2).




rp_filter checks if the incoming packet arrived on the interface that the kernel would use to send a reply back to that source IP.
In strict mode (1), if the incoming packet comes in on a different interface than expected, rp_filter drops it.
So asymmetric routing breaks strict rp_filter because replies arrive on a different interface than the outbound interface.


Why asymmetric routing happens:
Multi-WAN setups or policy-based routing.
VPN tunnels that route return traffic differently.
Complex network topologies.







sudo tee -a /etc/sysctl.conf > /dev/null << EOF

# Reverse Path Filtering Configuration - all interfaces set to loose mode

net.ipv4.conf.wgclient1.rp_filter = 2
net.ipv4.conf.eth0.rp_filter = 2
net.ipv4.conf.eth1.rp_filter = 2
net.ipv4.conf.br-lan.rp_filter = 2
net.ipv4.conf.lo.rp_filter = 2
net.ipv4.conf.apcli0.rp_filter = 2
net.ipv4.conf.apclix0.rp_filter = 2
net.ipv4.conf.ra0.rp_filter = 2
net.ipv4.conf.ra1.rp_filter = 2
net.ipv4.conf.rax0.rp_filter = 2
net.ipv4.conf.rax1.rp_filter = 2

net.ipv4.conf.all.rp_filter = 2
net.ipv4.conf.default.rp_filter = 2

EOF



sudo sysctl --system








# Set all interfaces to loose mode (2)

echo 2 > /proc/sys/net/ipv4/conf/wgclient1/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/eth0/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/eth1/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/br-lan/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/lo/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/apcli0/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/apclix0/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/ra0/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/ra1/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/rax0/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/rax1/rp_filter

echo 2 > /proc/sys/net/ipv4/conf/all/rp_filter
echo 2 > /proc/sys/net/ipv4/conf/default/rp_filter











/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




